" PlugInstall, PlugUpdate, PlugUpgrade, PlugClean

" XDG support
if empty($MYVIMRC) | let $MYVIMRC = expand('<sfile>:p') | endif
if empty($XDG_CACHE_HOME)  | let $XDG_CACHE_HOME  = $HOME."/.cache"       | endif
if empty($XDG_CONFIG_HOME) | let $XDG_CONFIG_HOME = $HOME."/.config"      | endif
if empty($XDG_DATA_HOME)   | let $XDG_DATA_HOME   = $HOME."/.local/share" | endif

set runtimepath^=$XDG_CONFIG_HOME/vim
set runtimepath+=$XDG_DATA_HOME/vim
set runtimepath+=$XDG_CONFIG_HOME/vim/after
set packpath^=$XDG_DATA_HOME/vim,$XDG_CONFIG_HOME/vim
set packpath+=$XDG_CONFIG_HOME/vim/after,$XDG_DATA_HOME/vim/after
let g:netrw_home = $XDG_DATA_HOME."/vim"
call mkdir($XDG_DATA_HOME."/vim/spell", 'p', 0700)
set viewdir=$XDG_DATA_HOME/vim/view | call mkdir(&viewdir, 'p', 0700)
set backupdir=$XDG_CACHE_HOME/vim/backup | call mkdir(&backupdir, 'p', 0700)
set directory=$XDG_CACHE_HOME/vim/swap   | call mkdir(&directory, 'p', 0700)
set undodir=$XDG_CACHE_HOME/vim/undo     | call mkdir(&undodir,   'p', 0700)
set viminfofile=$XDG_CACHE_HOME/vim/viminfo

" Plugins
if empty(glob('~/.config/vim/autoload/plug.vim'))
  silent !curl -fLo ~/.config/vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
endif

call plug#begin('~/.config/vim/autoload/plugged')
Plug 'itchyny/lightline.vim'
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'godlygeek/tabular'
Plug 'plasticboy/vim-markdown'
Plug 'junegunn/goyo.vim'
Plug 'airblade/vim-gitgutter'
Plug 'easymotion/vim-easymotion'
call plug#end()

" show current line on insert
autocmd InsertEnter * set cul
autocmd InsertLeave * set nocul

set background=dark                   " light / dark
if has("unix")
  let s:uname = system("uname -s")
else
  let s:uname = "windows"
endif
if has("termguicolors")
  if s:uname != "Darwin\n"
    set termguicolors
    let &t_8f = "\<Esc>[38;2;%lu;%lu;%lum"
    let &t_8b = "\<Esc>[48;2;%lu;%lu;%lum"
  endif
endif

set encoding=utf-8                    " default encoding
set autoread                          " auto reload
set spelllang=en                      " spelling
set spellsuggest=10                   " suggestions
set undolevels=100                    " no need for too many
set backspace=indent,eol,start        " delete indentation, line ends, etc
set textwidth=80                      " hard wrap at this column
set hidden                            " allow background hidden buffers
set wildmenu                          " tab completion menu
if s:uname == "Darwin\n"              " requires comp. with +clipboard
  set clipboard=unnamed
else
  set clipboard=unnamedplus
endif
set noswapfile                        " no temp files
set scrolloff=5                       " lines from the bottom when scrolling
set number                            " line numbers
set ignorecase                        " ignore case in searches
set smartcase                         " but not if search has caps
set hlsearch                          " highlight search matches
set incsearch                         " enable incremental searching
set noshowmode                        " let light line do this
set laststatus=2                      " always have a status line
set conceallevel=2                    " fontify
" Bindings
nnoremap <SPACE> <Nop>
let mapleader = " "
" Remove highlighs with SPC
noremap <silent> <Leader>, :silent noh<Bar>echo<CR>
" move through buffers
nnoremap <Leader>b :buffers<CR>:buffer<Space>
nnoremap <Leader>kk :buffers<CR>:bdelete<Space>
nnoremap <Leader>r :registers<CR>:put<Space>
nnoremap <C-h> <C-w>h
nnoremap <C-j> <C-w>j
nnoremap <C-k> <C-w>k
nnoremap <C-l> <C-w>l
nnoremap <Leader>k<Up> :wincmd k<CR>:close<CR>
nnoremap <Leader>k<Down> :wincmd j<CR>:close<CR>
nnoremap <Leader>k<Left> :wincmd h<CR>:close<CR>
nnoremap <Leader>k<Right> :wincmd l<CR>:close<CR>
" Git
set updatetime=100
highlight! link SignColumn LineNr
command GGhl GitGutterLineHighlightsToggle
command GGDiff GitGutterDiffOrig
" Syntax
syntax enable                         " use syntax, but don't override
filetype plugin indent on             " load syntax options
set foldmethod=syntax                 " use syntax for folding
" But python is different
autocmd FileType python setlocal foldmethod=indent smartindent shiftwidth=4
    \ tabstop=4 softtabstop=4
    \ cinwords=if,elif,else,for,while,try,except,finally,def,class
