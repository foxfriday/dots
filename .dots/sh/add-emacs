#!/usr/bin/env bash
#
# called add-emacs -m uses the github mirror.

function print_help {
    cat <<-END
Clone and install Emacs and its dependencies.

The build includes tree-sitter, so the branch must be emacs-29 or greater.
Bofore building, an editor will open so you can inspect the chosen
options and available components.

USAGE:
    ${0##*/} (options)

OPTIONS:
    -h
        Print this help.
    -m
        Use github Emacs mirror
END
}

EMACSREMOTE=https://git.savannah.gnu.org/git/emacs.git
while getopts ':hm' OPT; do
    case $OPT in
        h) print_help
           exit 0
           ;;
        m) EMACSREMOTE=emacs-mirror/emacs  ;;
        *) echo "Unknown option ${OPTARGS}" >&2
           exit 1
           ;;
    esac
done
source ./repo-functions.sh

command -v checkinstall > /dev/null ||
    { echo "missing checkinstall requirement"; exit 1; }

# Common flags for check install.
declare -a CHKINS
CHKINS+=(--backup=no
         --default
         --deldesc=yes
         --deldoc=yes
         --delspec=yes)

# Emacs compilation flags
declare -a EMACS
EMACS+=(--with-cairo
        --with-json
        --with-mailutils
        --with-modules
        --with-native-compilation=aot
        --with-pgtk
        --with-tree-sitter)

# Destination
DEST="${HOME}/Repos/system"

# Compiler
COMPILER=gcc-12
command -v "${COMPILER}" > /dev/null || { echo "${COMPILER} not found, please set new compiler."; exit 1; }

mkdir -p "${DEST}"

get_or_update "${DEST}"/tree-sitter tree-sitter/tree-sitter master
if (( UPDATED > 0 )); then
    cde "${DEST}/tree-sitter"
    VERSION=$(grep -E -o '^VERSION ?:= ?[0-9\.]+' Makefile | grep -E -o '[0-9\.]+')
    [[ -z "${VERSION}" ]] && { echo "Unable to determine tree-sitter version" >&2; exit 1; }
    make
    read -p "Install tree-sitter ${VERSION}? y/n" -r CHOICE
    case $CHOICE in
        y|Y ) echo "Installing with checkinstall..." ;;
        * ) echo "Aborting installation." >&2; exit 1; ;;
    esac
    sudo checkinstall --pkgname tree-sitter --pkgversion "${VERSION}" --provides tree-sitter "${CHKINS[@]}"
    TSPKG=$(find . -type f -name "tree-sitter_${VERSION}*.deb")
    [[ -z "${TSPKG}" ]] && { echo "Checkinstall failed..." >&2; exit 1; }
    sudo ldconfig
    sudo rm "${TSPKG}"
    make clean
fi


get_or_update "${DEST}"/emacs "${EMACSREMOTE}"
if (( UPDATED > 0 )); then
    cde "${DEST}/emacs"
    ./autogen.sh
    mkdir build
    cde ./build

    DT=$(date "+%Y-%m-%dT%H:%M:%S")
    LOG="config_${DT}.log"
    CC="${COMPILER}" ../configure "${EMACS[@]}" &> "${LOG}"
    vim "${LOG}"
    read -p "Compile? y/n" -r CHOICE
    case $CHOICE in
        y|Y ) echo "Installing with checkinstall..." ;;
        * ) echo "Aborting compilation." >&2; exit 1; ;;
    esac
    CC="${COMPILER}" make
    VERSION=$(grep -E -o "^PACKAGE_VERSION ?= ?'?[0-9\.]+'?" ../configure | grep -E -o '[0-9\.]+')
    [[ -z "${VERSION}" ]] && { echo "Unable to determine Emacs version" >&2; exit 1; }
    read -p "Install Emacs ${VERSION}? y/n" -r CHOICE
    case $CHOICE in
        y|Y ) echo "Installing with checkinstall..." ;;
        * ) echo "Aborting installation." >&2; exit 1; ;;
    esac
    sudo checkinstall --pkgname "${BRANCH}" --pkgversion "${VERSION}"  "${CHKINS[@]}"
    EPKG=$(find . -type f -name "emacs_${VERSION}*.deb")
    if [[ -z "${EPKG}" ]]; then
        make clean
    	cde "${DEST}/emacs"
    	sudo rm -r "${DEST}/emacs/build"
    else
	echo "Checkinstall failed..." >&2
	echo "Exiting without cleaning repository."
	exit 1
    fi
fi

get_or_update "${DEST}"/tree-sitter-module casouri/tree-sitter-module master
if (( UPDATED > 0 )); then
    echo "Tree Sitter modules was updated!"
    echo "modules must be build manually after inspecting scripts"
    echo "the compiled modules should be in Emacs' 'treesit-extra-load-path'"
    echo "See ${DEST}/tree-sitter-module"
fi
